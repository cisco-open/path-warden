# Copyright 2024 Cisco Systems, Inc. and its affiliates
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  generation: 1
  labels:
    app.kubernetes.io/instance: opal
    app.kubernetes.io/name: opal-server
    app.kubernetes.io/version: 0.7.4
    opal.ac/role: server
  name: opal-server
  namespace: opal-ns
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: opal
      app.kubernetes.io/name: opal-server
      opal.ac/role: server
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: opal
        app.kubernetes.io/name: opal-server
        app.kubernetes.io/version: 0.7.4
        opal.ac/role: server
    spec:
      containers:
      - env:
        - name: OPAL_POLICY_REPO_URL
          value: git@wwwin-github.cisco.com:chflemin/PathWardenPolicyRepo.git
        - name: OPAL_POLICY_REPO_POLLING_INTERVAL
          value: "30"
        - name: OPAL_POLICY_REPO_MAIN_BRANCH
          value: master
        - name: UVICORN_NUM_WORKERS
          value: "4"
        - name: OPAL_DATA_CONFIG_SOURCES
          value: '{"config":{"entries":[]}}'
        - name: OPAL_BROADCAST_URI
          value: postgres://postgres:postgres@opal-pgsql:5432/postgres
        envFrom:
        - secretRef:
            name: opal-env-secrets
        image: docker.io/permitio/opal-server:0.7.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthcheck
            port: http
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        name: opal-server
        ports:
        - containerPort: 7002
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthcheck
            port: http
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 10
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: opal
    app.kubernetes.io/name: opal-server
    app.kubernetes.io/version: 0.7.4
    opal.ac/role: server
  name: opal-server
  namespace: opal-ns
spec:
  clusterIP: 10.110.142.233
  clusterIPs:
  - 10.110.142.233
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: http
    port: 7002
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/instance: opal
    app.kubernetes.io/name: opal-server
    opal.ac/role: server
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}