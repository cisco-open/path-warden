# Copyright 2024 Cisco Systems, Inc. and its affiliates
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-portal
  labels:
    app.kubernetes.io/name: web-portal
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: kubernetes
    app.kubernetes.io/component: server
    app.kubernetes.io/part-of: demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: web-portal
  template:
    metadata:
      labels:
        app.kubernetes.io/name: web-portal
        app.kubernetes.io/version: "1.0"
        app.kubernetes.io/managed-by: kubernetes
        app.kubernetes.io/component: server
        app.kubernetes.io/part-of: demo
      annotations:
        sidecar.istio.io/logLevel: "info"
    spec:
      containers:
        - name: web-portal
          image: <username>/demo-web-portal:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5000
          env:
            - name: db_root_password
              valueFrom:
                secretKeyRef:
                  name: mysql-secrets
                  key: db_root_password
            - name: db_name
              value: pathwarden
            - name: SERVICE_NAME
              value: web-portal
            - name: SERVICE_VERSION
              value: '1.0'
            - name: service_label
              value: service-web-portal
        - name: otel-agent
          image: otel/opentelemetry-collector:latest
          command:
            - '/otelcol'
            - '--config=/conf/otel-agent-config.yaml'
          volumeMounts:
            - name: otel-agent-config-vol
              mountPath: /conf
          resources:
            requests:
              memory: '64Mi'
              cpu: '250m'
            limits:
              memory: '128Mi'
              cpu: '500m'
        - name: opa
          image: openpolicyagent/opa:latest
          args:
            - "run"
            - "--server"
            - "--addr=:8181"
            # - "/policies/policy.rego"
          ports:
            - name: opa
              containerPort: 8181
          volumeMounts:
            - name: policy-volume
              mountPath: /policies
      volumes:
        - configMap:
            name: otel-agent-conf
            items:
              - key: otel-agent-config
                path: otel-agent-config.yaml
          name: otel-agent-config-vol
        - name: policy-volume
          configMap:
            name: opa-policy
---
apiVersion: v1
kind: Service
metadata:
  name: web-portal
  labels:
    app.kubernetes.io/name: web-portal
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: kubernetes
    app.kubernetes.io/component: server
    app.kubernetes.io/part-of: demo
spec:
  ports:
  - port: 80
    targetPort: 5000
    name: flask-api
  - port: 81
    targetPort: 8181
    name: opa-api
  selector:
    app.kubernetes.io/name: web-portal
  type: LoadBalancer
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: opa-policy
data:
  policy.rego: |
    package main

    result = {
      "response": {
        "label": [
          input.label,
          valid_label,
          input.cas,
        ],
      },
    }

    valid_label = "Invalid" {
      input.label == "my_dummy_label1"
    } else = "Valid" {
      true
    }